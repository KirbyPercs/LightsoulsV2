local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "LightSoulsV2 üèñ | Hood Modded",
   LoadingTitle = "LightSoulsV2 Hub",
   LoadingSubtitle = "by blade",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "LightSouls Scripts"
   },
   Discord = {
      Enabled = true,
      Invite = "CDtZAEp8E8", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = false -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "LightSouls Key System",
      Subtitle = "Key in the discord server.",
      Note = "join the discord server to obtain the key!",
      FileName = "key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"BLADEONTOP"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("üëªMainüëª", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "LightSouls Had Loaded",
   Content = "Make sure to join the discord",
   Duration = 3,
   Image = nil,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local Button = MainTab:CreateButton({
   Name = "Speed",
   Callback = function()
   player = game.Players.LocalPlayer
    player.Character.Humanoid.WalkSpeed = 200
   end,
})

local Button = MainTab:CreateButton({
   Name = "Fly",
   Callback = function()
   -- fly made by KirbyX and Blade
loadstring("\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\40\39\104\116\116\112\115\58\47\47\103\105\115\116\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\109\101\111\122\111\110\101\89\84\47\98\102\48\51\55\100\102\102\57\102\48\97\55\48\48\49\55\51\48\52\100\100\100\54\55\102\100\99\100\51\55\48\47\114\97\119\47\101\49\52\101\55\52\102\52\50\53\98\48\54\48\100\102\53\50\51\51\52\51\99\102\51\48\98\55\56\55\48\55\52\101\98\51\99\53\100\50\47\97\114\99\101\117\115\37\50\53\50\48\120\37\50\53\50\48\102\108\121\37\50\53\50\48\50\37\50\53\50\48\111\98\102\108\117\99\97\116\111\114\39\41\44\116\114\117\101\41\41\40\41\10\10")()
   end,
})

local Button = MainTab:CreateButton({
   Name = "godmode",
   Callback = function()
   _G.bypass = true -- make it to false in order to reset / Default : true
_G.godmode = false -- make the bypass false too in order to disable godmode and reset
_G.invisible = false -- make the bypass false too in order to disable invisble and reset hide in some place and make it true
 
local Hook
Hook = hookfunction(getrawmetatable(game).__namecall, newcclosure(function(self, ...)
  local args = {...}
  if self.Name == "RemoteEvent" and _G.bypass == true  then
      if args[1] == "Reset"  then
          return wait(9e9)
      elseif _G.bypass == false then
        return Hook(self,...)
      end
  end
  return Hook(self, ...)
end))
 
-- bypass must be enabled to get the godmode effect in order to disable godmode you need to reset
 
while _G.godmode do wait(1) pcall(function()
    if _G.godmode == false then return  end
    game:GetService("Players").LocalPlayer.Character.BindableEvent:Destroy()
  end)
end
 
if _G.invisible then
    if _G.invisible == false then return end
    if game:GetService("Players").LocalPlayer.Character.LowerTorso:FindFirstChild'Root' then
game:GetService("Players").LocalPlayer.Character.LowerTorso.Root:Remove()
end
if game:GetService("Players").LocalPlayer.Character.UpperTorso:FindFirstChild'Waist' then
game:GetService("Players").LocalPlayer.Character.UpperTorso.Waist:Remove()
end
end
   end,
})

local Button = MainTab:CreateButton({
   Name = "GodmodeV2",
   Callback = function()
    --This script is made by TheMotoriousBIG (roblox)
--God Mode is unable to kill people in-game.
 
local player = game.Players.LocalPlayer
 
if player.Character then
 
if player.Character:FindFirstChild("Humanoid") then
 
player.Character.Humanoid.Name = "1"
 
end
 
local l = player.Character["1"]:Clone()
 
l.Parent = player.Character
 
l.Name = "Humanoid"; wait(0.1)
 
player.Character["1"]:Destroy()
 
workspace.CurrentCamera.CameraSubject = player.Character.Humanoid
 
player.Character.Animate.Disabled = true; wait(0.1)
 
player.Character.Animate.Disabled = false
 
end
 
print("Godmode Has Loaded.")
   end,
})

local Button = MainTab:CreateButton({
   Name = "CFrame Speed",
   Callback = function()
--CFrame Speed Script

--Function to calculate the speed of a CFrame movement
local function calculateCFrameSpeed(startCFrame, endCFrame, deltaTime)
    local positionDelta = endCFrame.Position - startCFrame.Position
    local rotationDelta = endCFrame - endCFrame.Position - (startCFrame - startCFrame.Position)
    
    local linearSpeed = positionDelta.Magnitude / deltaTime
    local angularSpeed = rotationDelta.Magnitude / deltaTime
    
    return linearSpeed, angularSpeed
end

-- Example usage
local startCFrame = CFrame.new(0, 0, 0)
local endCFrame = CFrame.new(5, 0, 0) + CFrame.Angles(0, math.pi/2, 0)
local deltaTime = 1 -- Time in seconds

local linearSpeed, angularSpeed = calculateCFrameSpeed(startCFrame, endCFrame, deltaTime)

print("Linear Speed:", linearSpeed)
print("Angular Speed:", angularSpeed)
   end,
})
